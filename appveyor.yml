version: "{build}-ci"

# Environment configuration. --------------------------------------------------
environment:
  # Properties, passed to MSBuild project.
  VersionMajor: 0
  VersionMinor: 1
  VersionPatch: 0
init:
# Properties, passed to MSBuild project.
- ps: |
    $env:BuildDir = "$env:APPVEYOR_BUILD_FOLDER\.OUTPUT"
    $env:VersionBuild = "$env:APPVEYOR_BUILD_NUMBER"
    $env:VersionStage = "$env:APPVEYOR_REPO_BRANCH"
    $env:VersionTag = "$env:APPVEYOR_REPO_COMMIT"
  
matrix:
  # Fail whole build on first error.
  fast_finish: true

services:
# Enable IIS, which is needed for web client testing.
- iis
install:
- cmd: git clone https://%GitlabUsr%:%GitlabPass%@gitlab.com/ClxS/Tool.git Staging
- cmd: dir C:\projects\stardew-farmhand\Staging /b /a:d
- cmd: dir C:\projects\stardew-farmhand\Staging\tmp /b /a:d
# Build configuration. --------------------------------------------------------
configuration:
- Release
build_script:
- ps: |
    nuget restore
    git submodule update --init --recursive

    $buildCmd = "C:\Program Files (x86)\MSBuild\14.0\bin\msbuild.exe"
    $buildArgs = @(
      "/m",
      "/l:C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll",
      "/p:Configuration=$env:CONFIGURATION",
      "/p:DefineConstants=WINDOWS"
      "/v:m")
    
    # If build is not a scheduled one, than simply build project with MSBuild.
    if ($env:APPVEYOR_SCHEDULED_BUILD -ne "True") {
      & $buildCmd $buildArgs
      return
    }

    nuget install PublishCoverity -Version 0.10.0
        
    # Else, build project with Coverity Scan.
    "Building project with Coverity..."
    & "cov-build.exe" `
      --dir cov-int `
      $buildCmd $buildArgs

    $version = "$env:VersionMajor.$env:VersionMinor.$env:VersionPatch" +
      "-$env:VersionStage+$env:VersionBuild"
    $formField = New-Object Net.Http.StringContent($version)

    # Compress results.
    PublishCoverity.0.10.0/PublishCoverity compress -o "$env:APPVEYOR_BUILD_FOLDER\$env:APPVEYOR_PROJECT_NAME.zip" -i "$env:APPVEYOR_BUILD_FOLDER\cov-int"
    PublishCoverity.0.10.0/PublishCoverity publish -z "$env:APPVEYOR_BUILD_FOLDER\$env:APPVEYOR_PROJECT_NAME.zip" -r ClxS/Stardew-Farmhand -t $env:CoverityProjectToken -e $env:CoverityNotificationEmail -d "Scheduled CI server build." --codeVersion "$formField"
    
# Other configuration. --------------------------------------------------------
# Use GitHub API for fast repository fetching.
shallow_clone: true