version: "{build}-ci"

# Environment configuration. --------------------------------------------------
environment:
  # Properties, passed to MSBuild project.
  VersionMajor: 0
  VersionMinor: 1
  VersionPatch: 0
init:
# Properties, passed to MSBuild project.
- ps: |
    $env:BuildDir = "$env:APPVEYOR_BUILD_FOLDER\.OUTPUT"
    $env:VersionBuild = "$env:APPVEYOR_BUILD_NUMBER"
    $env:VersionStage = "$env:APPVEYOR_REPO_BRANCH"
    $env:VersionTag = "$env:APPVEYOR_REPO_COMMIT"
  
matrix:
  # Fail whole build on first error.
  fast_finish: true

services:
# Enable IIS, which is needed for web client testing.
- iis
install:
- ps: |
    $encrypted = ConvertTo-SecureString -String "01000000d08c9ddf0115d1118c7a00c04fc297eb01000000435f28ebf6f6f5428e8c13599a0d5f99000000000200000000001066000000010000200000008d0b6a13f11802f48be41434a3f26e83bc8b36f9fd3cd5deac050e996cfc5891000000000e8000000002000020000000a7f1f694d96b12e395489f4f3c639c65781130e9a36083f50d6833f64f30f92b9000000044344d2cc52ef32f76c7120c82feda81f2423fd8a7af0aca588fa788cd97609d8aa03aed5256be8f7dffda68cde77f7a804963164f2a4bd573adaa23bf5508a0b656ee7017a8e5ba1edb7383690225a4fae19ea758fd025150d2682b880db90107b01f23c88acf5499be6fedd86b3532e219ff517d90759cf8e3f24fb9d13cefb979f3e43a8d0df98c28f62907a3245e40000000048748151851f0cd4cdb8ee7ccb811ce6f27c7c1e5a6a023f0ab22e38e62e07c6e0e13a64c2ef13aa8057b957e9b4a787899138572666988b78b9bba67a10dd7"
    $Ptr = [System.Runtime.InteropServices.Marshal]::SecureStringToCoTaskMemUnicode($encrypted)
    $result = [System.Runtime.InteropServices.Marshal]::PtrToStringUni($Ptr)
    [System.Runtime.InteropServices.Marshal]::ZeroFreeCoTaskMemUnicode($Ptr)
    
    git clone $result C:\projects\stardew-farmhand\WorkingDirectory\tmp
- cmd: |
    move C:\projects\stardew-farmhand\WorkingDirectory\tmp\*.* C:\projects\stardew-farmhand\WorkingDirectory
# Build configuration. --------------------------------------------------------
configuration:
- Release
build_script:
- ps: |
    nuget restore

    $buildCmd = "C:\Program Files (x86)\MSBuild\14.0\bin\msbuild.exe"
    $buildArgs = @(
      "/m",
      "/l:C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll",
      "/p:Configuration=$env:CONFIGURATION",
      "/p:DefineConstants=WINDOWS"
      "/v:m")
    
    # If build is not a scheduled one, than simply build project with MSBuild.
    if ($env:APPVEYOR_SCHEDULED_BUILD -ne "True") {
      & $buildCmd $buildArgs
      return
    }

    nuget install PublishCoverity -Version 0.10.0
        
    # Else, build project with Coverity Scan.
    "Building project with Coverity..."
    & "cov-build.exe" `
      --dir cov-int `
      $buildCmd $buildArgs

    $version = "$env:VersionMajor.$env:VersionMinor.$env:VersionPatch" +
      "-$env:VersionStage+$env:VersionBuild"
    $formField = New-Object Net.Http.StringContent($version)

    # Compress results.
    PublishCoverity.0.10.0/PublishCoverity compress -o "$env:APPVEYOR_BUILD_FOLDER\$env:APPVEYOR_PROJECT_NAME.zip" -i "$env:APPVEYOR_BUILD_FOLDER\cov-int"
    PublishCoverity.0.10.0/PublishCoverity publish -z "$env:APPVEYOR_BUILD_FOLDER\$env:APPVEYOR_PROJECT_NAME.zip" -r ClxS/Stardew-Farmhand -t $env:CoverityProjectToken -e $env:CoverityNotificationEmail -d "Scheduled CI server build." --codeVersion "$formField"
    
# Other configuration. --------------------------------------------------------
# Use GitHub API for fast repository fetching.
shallow_clone: true